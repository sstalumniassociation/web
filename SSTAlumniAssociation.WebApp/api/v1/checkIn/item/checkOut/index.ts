/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCheckInFromDiscriminatorValue, createStatusFromDiscriminatorValue, type CheckIn, type Status } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v1/check-in/{id}/check-out
 */
export interface CheckOutRequestBuilder extends BaseRequestBuilder<CheckOutRequestBuilder> {
    /**
     * Check out
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<CheckIn>}
     * @throws {Status} error when the service returns a 4XX or 5XX status code
     */
     post(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CheckIn | undefined>;
    /**
     * Check out
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const CheckOutRequestBuilderUriTemplate = "{+baseurl}/v1/check-in/{id}/check-out";
/**
 * Metadata for all the requests in the request builder.
 */
export const CheckOutRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: CheckOutRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createStatusFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCheckInFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
